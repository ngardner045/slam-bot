services:
  roboclaw:
    environment:
      - RMW_IMPLEMENTATION=rmw_fastrtps_cpp
      - ROS_DOMAIN_ID=7
      - ROS_LOCALHOST_ONLY=0
    build:
      context: ..
      dockerfile: docker/Dockerfile
    network_mode: host
    devices:
      - "/dev/ttyACM0:/dev/ttyACM0"
      - "/dev/input/event5:/dev/input/event5"
    volumes:
      - ../src/roboclaw_base_node.py:/app/roboclaw_base_node.py:ro
      - ./teleop.yaml:/app/teleop.yaml:ro
      - ../captures:/captures:rw
    command:
      - bash
      - -lc
      - |
        set -e
        source /opt/ros/humble/setup.bash
        # 1) Start the RoboClaw driver (background)
        python3 /app/roboclaw_base_node.py --ros-args \
          -p port:=/dev/ttyACM0 -p address:=0x80 \
          -p max_duty_frac:=0.8 -p v_full:=0.6 -p cmd_timeout:=2.0 &
        # 2) Start joy_node (background)
        ros2 run joy joy_node --ros-args \
        # 3) Snapshot Trigger (default Y=3; override with --ros-args -p y_button_index:=X)
        python3 /app/snapshot_recorder.py &
          -p dev:=/dev/input/event5 -p autorepeat_rate:=20.0 -p deadzone:=0.05 &
        # 4) Start teleop_twist_joy (foreground)
        #    (LB=6 deadman, RB=7 turbo; linear axis=1; yaw axis=0)
        ros2 run teleop_twist_joy teleop_node --ros-args --params-file /app/teleop.yaml
  realsense:
    build:
      context: ..
      dockerfile: docker/realsense.Dockerfile
    container_name: realsense
    network_mode: host
    privileged: true
    security_opt: ["seccomp:unconfined"]
    # Present *all* device nodes (fastest way to avoid permission/enumeration issues on Pi)
    volumes:
      - /dev:/dev
      - /run/udev:/run/udev:ro
      - ./rs_params.yaml:/app/rs_params.yaml:ro
    environment:
      - ROS_DOMAIN_ID=7
      - RMW_IMPLEMENTATION=rmw_fastrtps_cpp
      # Not strictly needed after FORCE_LIBUVC build, but harmless:
      - REALSENSE_USB_BACKEND=libusb
    entrypoint: ["/ros_entrypoint.sh"]
    command:
      - bash
      - -lc
      - |
        source /opt/ros_ws/install/setup.bash;
        exec ros2 launch realsense2_camera rs_launch.py \
          camera_name:=d455 \
          config_file:=/app/rs_params.yaml
    restart: unless-stopped